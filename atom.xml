<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>macrohaoのBLOG</title>
  
  <subtitle>振浩的个人博客</subtitle>
  <link href="http://macrohao.hithub.io/atom.xml" rel="self"/>
  
  <link href="http://macrohao.hithub.io/"/>
  <updated>2021-09-07T15:02:50.220Z</updated>
  <id>http://macrohao.hithub.io/</id>
  
  <author>
    <name>史振浩</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://macrohao.hithub.io/2021/09/28/1003%20%E6%88%91%E8%A6%81%E9%80%9A%E8%BF%87%EF%BC%81%20(20%20%E5%88%86)/"/>
    <id>http://macrohao.hithub.io/2021/09/28/1003%20%E6%88%91%E8%A6%81%E9%80%9A%E8%BF%87%EF%BC%81%20(20%20%E5%88%86)/</id>
    <published>2021-09-27T23:40:21.054Z</published>
    <updated>2021-09-07T15:02:50.220Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1003-我要通过！-20-分"><a href="#1003-我要通过！-20-分" class="headerlink" title="1003 我要通过！ (20 分)"></a>1003 我要通过！ (20 分)</h1><p>“<strong>答案正确</strong>”是自动判题系统给出的最令人欢喜的回复。本题属于 PAT 的“<strong>答案正确</strong>”大派送 —— 只要读入的字符串满足下列条件，系统就输出“<strong>答案正确</strong>”，否则输出“<strong>答案错误</strong>”。</p><p>得到“<strong>答案正确</strong>”的条件是：</p><ol><li>字符串中必须仅有 <code>P</code>、 <code>A</code>、 <code>T</code>这三种字符，不可以包含其它字符；</li><li>任意形如 <code>xPATx</code> 的字符串都可以获得“<strong>答案正确</strong>”，其中 <code>x</code> 或者是空字符串，或者是仅由字母 <code>A</code> 组成的字符串；</li><li>如果 <code>aPbTc</code> 是正确的，那么 <code>aPbATca</code> 也是正确的，其中 <code>a</code>、 <code>b</code>、 <code>c</code> 均或者是空字符串，或者是仅由字母 <code>A</code> 组成的字符串。</li></ol><p>现在就请你为 PAT 写一个自动裁判程序，判定哪些字符串是可以获得“<strong>答案正确</strong>”的。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>每个测试输入包含 1 个测试用例。第 1 行给出一个正整数 <em>n</em> (≤10)，是需要检测的字符串个数。接下来每个字符串占一行，字符串长度不超过 100，且不包含空格。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>每个字符串的检测结果占一行，如果该字符串可以获得“<strong>答案正确</strong>”，则输出 <code>YES</code>，否则输出 <code>NO</code>。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">PAT</span><br><span class="line">PAAT</span><br><span class="line">AAPATAA</span><br><span class="line">AAPAATAAAA</span><br><span class="line">xPATx</span><br><span class="line">PT</span><br><span class="line">Whatever</span><br><span class="line">APAAATAA</span><br><span class="line">APT</span><br><span class="line">APATTAA结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">NO</span><br><span class="line">NO</span><br><span class="line">NO</span><br><span class="line">NO</span><br><span class="line">NO</span><br><span class="line">NO结尾无空行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;string&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()&#123;</span><br><span class="line">    int n,p=0,t=0;</span><br><span class="line">    string s;</span><br><span class="line">    bool flag =true;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    for(int i=0 ;i &lt; n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;s;</span><br><span class="line">        for(int j=0;j&lt;s.size();j++)&#123;</span><br><span class="line">            if(s[j]!=&#x27;A&#x27;&amp;&amp;s[j]!=&#x27;P&#x27;&amp;&amp;s[j]!=&#x27;T&#x27;) flag = false;</span><br><span class="line">            if(s[j]==&#x27;P&#x27;) p=j;</span><br><span class="line">            if(s[j]==&#x27;T&#x27;) t=j;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        if(flag!=false &amp;&amp; t-p&gt;1&amp;&amp;t&gt;0&amp;&amp;p&gt;=0&amp;&amp;p * (t-1-p) == s.length()-1-t)</span><br><span class="line">            cout&lt;&lt;&quot;YES&quot;&lt;&lt;endl;</span><br><span class="line">        else</span><br><span class="line">           cout&lt;&lt;&quot;NO&quot;&lt;&lt;endl; </span><br><span class="line">        </span><br><span class="line">         </span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1003-我要通过！-20-分&quot;&gt;&lt;a href=&quot;#1003-我要通过！-20-分&quot; class=&quot;headerlink&quot; title=&quot;1003 我要通过！ (20 分)&quot;&gt;&lt;/a&gt;1003 我要通过！ (20 分)&lt;/h1&gt;&lt;p&gt;“&lt;strong&gt;答案正确&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://macrohao.hithub.io/2021/09/28/1002%20%E5%86%99%E5%87%BA%E8%BF%99%E4%B8%AA%E6%95%B0%20(20%20%E5%88%86)/"/>
    <id>http://macrohao.hithub.io/2021/09/28/1002%20%E5%86%99%E5%87%BA%E8%BF%99%E4%B8%AA%E6%95%B0%20(20%20%E5%88%86)/</id>
    <published>2021-09-27T23:40:21.052Z</published>
    <updated>2021-09-07T15:02:12.812Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1002-写出这个数-20-分"><a href="#1002-写出这个数-20-分" class="headerlink" title="1002 写出这个数 (20 分)"></a>1002 写出这个数 (20 分)</h1><p>读入一个正整数 <em>n</em>，计算其各位数字之和，用汉语拼音写出和的每一位数字。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>每个测试输入包含 1 个测试用例，即给出自然数 <em>n</em> 的值。这里保证 <em>n</em> 小于 10100。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行内输出 <em>n</em> 的各位数字之和的每一位，拼音数字间有 1 空格，但一行中最后一个拼音数字后没有空格。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1234567890987654321123456789</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yi san wu</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()&#123;</span><br><span class="line">    char n[1000];</span><br><span class="line">    scanf(&quot;%s&quot;,n);</span><br><span class="line">    int sum=0;</span><br><span class="line">   for(int i=0;n[i]!=&#x27;\0&#x27;;i++)&#123;</span><br><span class="line">   sum += n[i]-&#x27;0&#x27;;</span><br><span class="line">   &#125;</span><br><span class="line">    int a[10],cnt=0;</span><br><span class="line">    while(sum)&#123;</span><br><span class="line">        a[cnt++]=sum%10;</span><br><span class="line">        sum /= 10;</span><br><span class="line">    &#125;</span><br><span class="line">    char sign[10][10]=&#123;&quot;ling&quot;,&quot;yi&quot;,&quot;er&quot;,&quot;san&quot;,&quot;si&quot;,&quot;wu&quot;,&quot;liu&quot;,&quot;qi&quot;,&quot;ba&quot;,&quot;jiu&quot;&#125;;</span><br><span class="line">    for(int i=cnt-1;i&gt;=0;i--)&#123;</span><br><span class="line">        printf(&quot;%s&quot;,sign[a[i]]);</span><br><span class="line">        if(i&gt;0)</span><br><span class="line">            printf(&quot; &quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1002-写出这个数-20-分&quot;&gt;&lt;a href=&quot;#1002-写出这个数-20-分&quot; class=&quot;headerlink&quot; title=&quot;1002 写出这个数 (20 分)&quot;&gt;&lt;/a&gt;1002 写出这个数 (20 分)&lt;/h1&gt;&lt;p&gt;读入一个正整数 &lt;em&gt;n&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://macrohao.hithub.io/2021/09/28/1001%20%E5%AE%B3%E6%AD%BB%E4%BA%BA%E4%B8%8D%E5%81%BF%E5%91%BD%E7%9A%84(3n+1)%E7%8C%9C%E6%83%B3%20(15%20%E5%88%86)/"/>
    <id>http://macrohao.hithub.io/2021/09/28/1001%20%E5%AE%B3%E6%AD%BB%E4%BA%BA%E4%B8%8D%E5%81%BF%E5%91%BD%E7%9A%84(3n+1)%E7%8C%9C%E6%83%B3%20(15%20%E5%88%86)/</id>
    <published>2021-09-27T23:40:21.049Z</published>
    <updated>2021-09-07T15:01:32.068Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1001-害死人不偿命的-3n-1-猜想-15-分"><a href="#1001-害死人不偿命的-3n-1-猜想-15-分" class="headerlink" title="1001 害死人不偿命的(3n+1)猜想 (15 分)"></a>1001 害死人不偿命的(3n+1)猜想 (15 分)</h1><p>卡拉兹(Callatz)猜想：</p><p>对任何一个正整数 <em>n</em>，如果它是偶数，那么把它砍掉一半；如果它是奇数，那么把 (3<em>n</em>+1) 砍掉一半。这样一直反复砍下去，最后一定在某一步得到 <em>n</em>=1。卡拉兹在 1950 年的世界数学家大会上公布了这个猜想，传说当时耶鲁大学师生齐动员，拼命想证明这个貌似很傻很天真的命题，结果闹得学生们无心学业，一心只证 (3<em>n</em>+1)，以至于有人说这是一个阴谋，卡拉兹是在蓄意延缓美国数学界教学与科研的进展……</p><p>我们今天的题目不是证明卡拉兹猜想，而是对给定的任一不超过 1000 的正整数 <em>n</em>，简单地数一下，需要多少步（砍几下）才能得到 <em>n</em>=1？</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>每个测试输入包含 1 个测试用例，即给出正整数 <em>n</em> 的值。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出从 <em>n</em> 计算到 1 需要的步数。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()&#123;</span><br><span class="line">    int n,count=0;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    while(n!=1)&#123;</span><br><span class="line">        if(n%2 == 0)&#123;</span><br><span class="line">            n = n/2;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            n = (3*n+1)/2;</span><br><span class="line">        &#125;</span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;count;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1001-害死人不偿命的-3n-1-猜想-15-分&quot;&gt;&lt;a href=&quot;#1001-害死人不偿命的-3n-1-猜想-15-分&quot; class=&quot;headerlink&quot; title=&quot;1001 害死人不偿命的(3n+1)猜想 (15 分)&quot;&gt;&lt;/a&gt;1001 害死人不</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://macrohao.hithub.io/2021/09/28/1048%20%E6%95%B0%E5%AD%97%E5%8A%A0%E5%AF%86%20(20%20%E5%88%86)/"/>
    <id>http://macrohao.hithub.io/2021/09/28/1048%20%E6%95%B0%E5%AD%97%E5%8A%A0%E5%AF%86%20(20%20%E5%88%86)/</id>
    <published>2021-09-27T23:40:21.047Z</published>
    <updated>2021-09-07T15:20:47.788Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1048-数字加密-20-分"><a href="#1048-数字加密-20-分" class="headerlink" title="1048 数字加密 (20 分)"></a>1048 数字加密 (20 分)</h1><p>本题要求实现一种数字加密方法。首先固定一个加密用正整数 A，对任一正整数 B，将其每 1 位数字与 A 的对应位置上的数字进行以下运算：对奇数位，对应位的数字相加后对 13 取余——这里用 J 代表 10、Q 代表 11、K 代表 12；对偶数位，用 B 的数字减去 A 的数字，若结果为负数，则再加 10。这里令个位为第 1 位。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中依次给出 A 和 B，均为不超过 100 位的正整数，其间以空格分隔。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出加密后的结果。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1234567 368782971</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3695Q8118</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">const int maxn=110;</span><br><span class="line"></span><br><span class="line">void reverse(char number[])&#123;</span><br><span class="line">    int len = strlen(number);</span><br><span class="line">    for(int i=0;i&lt;len/2;i++)&#123;</span><br><span class="line">        int temp=number[i];</span><br><span class="line">        number[i]=number[len-1-i];</span><br><span class="line">        number[len-1-i]=temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">    char A[maxn],B[maxn],ans[maxn];</span><br><span class="line">    scanf(&quot;%s %s&quot;,A,B);</span><br><span class="line">    reverse(A);</span><br><span class="line">    reverse(B);</span><br><span class="line">    int len1=strlen(A);</span><br><span class="line">    int len2=strlen(B);</span><br><span class="line">    int len=len1&gt;len2 ?len1:len2;</span><br><span class="line">    for(int i=0;i&lt;len;i++)&#123;</span><br><span class="line">        int numA=i&lt;len1? A[i]-&#x27;0&#x27;:0;</span><br><span class="line">        int numB=i&lt;len2? B[i]-&#x27;0&#x27;:0;</span><br><span class="line">        if(i%2==0)&#123;</span><br><span class="line">            int temp=(numB+numA)%13;</span><br><span class="line">            if(temp==12) ans[i]=&#x27;K&#x27;;</span><br><span class="line">            else if(temp==11) ans[i]=&#x27;Q&#x27;;</span><br><span class="line">            else if(temp==10) ans[i]=&#x27;J&#x27;;</span><br><span class="line">            else ans[i]=temp + &#x27;0&#x27;;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            int temp=numB-numA;</span><br><span class="line">            if(temp&lt;0) temp = temp+10;</span><br><span class="line">            ans[i]=temp + &#x27;0&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    reverse(ans);</span><br><span class="line">    puts(ans);</span><br><span class="line">    </span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1048-数字加密-20-分&quot;&gt;&lt;a href=&quot;#1048-数字加密-20-分&quot; class=&quot;headerlink&quot; title=&quot;1048 数字加密 (20 分)&quot;&gt;&lt;/a&gt;1048 数字加密 (20 分)&lt;/h1&gt;&lt;p&gt;本题要求实现一种数字加密方法。首先固</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://macrohao.hithub.io/2021/09/28/1047%20%E7%BC%96%E7%A8%8B%E5%9B%A2%E4%BD%93%E8%B5%9B%20(20%20%E5%88%86)/"/>
    <id>http://macrohao.hithub.io/2021/09/28/1047%20%E7%BC%96%E7%A8%8B%E5%9B%A2%E4%BD%93%E8%B5%9B%20(20%20%E5%88%86)/</id>
    <published>2021-09-27T23:40:21.045Z</published>
    <updated>2021-09-07T15:20:15.299Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1047-编程团体赛-20-分"><a href="#1047-编程团体赛-20-分" class="headerlink" title="1047 编程团体赛 (20 分)"></a>1047 编程团体赛 (20 分)</h1><p>编程团体赛的规则为：每个参赛队由若干队员组成；所有队员独立比赛；参赛队的成绩为所有队员的成绩和；成绩最高的队获胜。</p><p>现给定所有队员的比赛成绩，请你编写程序找出冠军队。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出一个正整数 <em>N</em>（≤104），即所有参赛队员总数。随后 <em>N</em> 行，每行给出一位队员的成绩，格式为：<code>队伍编号-队员编号 成绩</code>，其中<code>队伍编号</code>为 1 到 1000 的正整数，<code>队员编号</code>为 1 到 10 的正整数，<code>成绩</code>为 0 到 100 的整数。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出冠军队的编号和总成绩，其间以一个空格分隔。注意：题目保证冠军队是唯一的。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">3-10 99</span><br><span class="line">11-5 87</span><br><span class="line">102-1 0</span><br><span class="line">102-3 100</span><br><span class="line">11-9 89</span><br><span class="line">3-2 61结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">11 176</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int team[1010]=&#123;0&#125;;</span><br><span class="line">int main()&#123;</span><br><span class="line">    int n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    int number,s,score;</span><br><span class="line">    for(int i=0;i&lt;n;i++)&#123;</span><br><span class="line">        scanf(&quot;%d%d%d&quot;,&amp;number,&amp;s,&amp;score);</span><br><span class="line">        team[number] += score;</span><br><span class="line">    &#125;</span><br><span class="line">    int max=team[0],k;</span><br><span class="line">    for(int i=0;i&lt;1010;i++)&#123;</span><br><span class="line">        if(team[i]&gt;max)&#123;</span><br><span class="line">            max = team[i];</span><br><span class="line">            k=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;%d %d\n&quot;,k,team[k]);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1047-编程团体赛-20-分&quot;&gt;&lt;a href=&quot;#1047-编程团体赛-20-分&quot; class=&quot;headerlink&quot; title=&quot;1047 编程团体赛 (20 分)&quot;&gt;&lt;/a&gt;1047 编程团体赛 (20 分)&lt;/h1&gt;&lt;p&gt;编程团体赛的规则为：每个参赛</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://macrohao.hithub.io/2021/09/28/1046%20%E5%88%92%E6%8B%B3%20(15%20%E5%88%86)/"/>
    <id>http://macrohao.hithub.io/2021/09/28/1046%20%E5%88%92%E6%8B%B3%20(15%20%E5%88%86)/</id>
    <published>2021-09-27T23:40:21.043Z</published>
    <updated>2021-09-07T15:19:45.286Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1046-划拳-15-分"><a href="#1046-划拳-15-分" class="headerlink" title="1046 划拳 (15 分)"></a>1046 划拳 (15 分)</h1><p>划拳是古老中国酒文化的一个有趣的组成部分。酒桌上两人划拳的方法为：每人口中喊出一个数字，同时用手比划出一个数字。如果谁比划出的数字正好等于两人喊出的数字之和，谁就赢了，输家罚一杯酒。两人同赢或两人同输则继续下一轮，直到唯一的赢家出现。</p><p>下面给出甲、乙两人的划拳记录，请你统计他们最后分别喝了多少杯酒。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行先给出一个正整数 <em>N</em>（≤100），随后 <em>N</em> 行，每行给出一轮划拳的记录，格式为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">甲喊 甲划 乙喊 乙划</span><br></pre></td></tr></table></figure><p>其中<code>喊</code>是喊出的数字，<code>划</code>是划出的数字，均为不超过 100 的正整数（两只手一起划）。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中先后输出甲、乙两人喝酒的杯数，其间以一个空格分隔。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">8 10 9 12</span><br><span class="line">5 10 5 10</span><br><span class="line">3 8 5 12</span><br><span class="line">12 18 1 13</span><br><span class="line">4 16 12 15结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()&#123;</span><br><span class="line">    int n,failA=0,failB=0;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        int a1,a2,b1,b2;</span><br><span class="line">        cin&gt;&gt;a1&gt;&gt;a2&gt;&gt;b1&gt;&gt;b2;</span><br><span class="line">        if(a2==a1+b1&amp;&amp;b2!=a1+b1)&#123;</span><br><span class="line">            failB++;</span><br><span class="line">        &#125;</span><br><span class="line">        if(a2!=a1+b1&amp;&amp;b2==a1+b1)&#123;</span><br><span class="line">            failA++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;%d %d&quot;,failA,failB);</span><br><span class="line">    printf(&quot;\n&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1046-划拳-15-分&quot;&gt;&lt;a href=&quot;#1046-划拳-15-分&quot; class=&quot;headerlink&quot; title=&quot;1046 划拳 (15 分)&quot;&gt;&lt;/a&gt;1046 划拳 (15 分)&lt;/h1&gt;&lt;p&gt;划拳是古老中国酒文化的一个有趣的组成部分。酒桌上两人</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://macrohao.hithub.io/2021/09/28/1043%20%E8%BE%93%E5%87%BAPATest%20(20%20%E5%88%86)/"/>
    <id>http://macrohao.hithub.io/2021/09/28/1043%20%E8%BE%93%E5%87%BAPATest%20(20%20%E5%88%86)/</id>
    <published>2021-09-27T23:40:21.040Z</published>
    <updated>2021-09-07T15:19:11.394Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1043-输出PATest-20-分"><a href="#1043-输出PATest-20-分" class="headerlink" title="1043 输出PATest (20 分)"></a>1043 输出PATest (20 分)</h1><p>给定一个长度不超过 104 的、仅由英文字母构成的字符串。请将字符重新调整顺序，按 <code>PATestPATest....</code> 这样的顺序输出，并忽略其它字符。当然，六种字符的个数不一定是一样多的，若某种字符已经输出完，则余下的字符仍按 PATest 的顺序打印，直到所有字符都被输出。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一个长度不超过 104 的、仅由英文字母构成的非空字符串。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中按题目要求输出排序后的字符串。题目保证输出非空。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">redlesPayBestPATTopTeePHPereatitAPPT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PATestPATestPTetPTePePee</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;string&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">char str[10010];</span><br><span class="line">char PAT[6]=&#123;&#x27;P&#x27;,&#x27;A&#x27;,&#x27;T&#x27;,&#x27;e&#x27;,&#x27;s&#x27;,&#x27;t&#x27;&#125;;</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">    cin&gt;&gt;str;</span><br><span class="line">    int number[6]=&#123;0&#125;;</span><br><span class="line">    int len = strlen(str);</span><br><span class="line">    for(int i=0;i&lt;len;i++)&#123;</span><br><span class="line">        for(int j=0;j&lt;6;j++)&#123;</span><br><span class="line">            if(str[i]==PAT[j])&#123;</span><br><span class="line">                number[j]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    int sum=0;</span><br><span class="line">    for(int i=0;i&lt;6;i++)&#123;</span><br><span class="line">        sum += number[i];</span><br><span class="line">    &#125;</span><br><span class="line">    int i=0,j=0;</span><br><span class="line">    &#123;</span><br><span class="line">        while(sum&gt;0)&#123;</span><br><span class="line">            for(int i=0;i&lt;6;i++)&#123;</span><br><span class="line">                if(number[i]&gt;0)&#123;</span><br><span class="line">                    printf(&quot;%c&quot;,PAT[i]);</span><br><span class="line">                    number[i]--;</span><br><span class="line">                    sum--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1043-输出PATest-20-分&quot;&gt;&lt;a href=&quot;#1043-输出PATest-20-分&quot; class=&quot;headerlink&quot; title=&quot;1043 输出PATest (20 分)&quot;&gt;&lt;/a&gt;1043 输出PATest (20 分)&lt;/h1&gt;&lt;p&gt;给定</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://macrohao.hithub.io/2021/09/28/1042%20%E5%AD%97%E7%AC%A6%E7%BB%9F%E8%AE%A1%20(20%20%E5%88%86)/"/>
    <id>http://macrohao.hithub.io/2021/09/28/1042%20%E5%AD%97%E7%AC%A6%E7%BB%9F%E8%AE%A1%20(20%20%E5%88%86)/</id>
    <published>2021-09-27T23:40:21.039Z</published>
    <updated>2021-09-07T15:18:41.564Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1042-字符统计-20-分"><a href="#1042-字符统计-20-分" class="headerlink" title="1042 字符统计 (20 分)"></a>1042 字符统计 (20 分)</h1><p>请编写程序，找出一段给定文字中出现最频繁的那个英文字母。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一个长度不超过 1000 的字符串。字符串由 ASCII 码表中任意可见字符及空格组成，至少包含 1 个英文字母，以回车结束（回车不算在内）。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出出现频率最高的那个英文字母及其出现次数，其间以空格分隔。如果有并列，则输出按字母序最小的那个字母。统计时不区分大小写，输出小写字母。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">This is a simple TEST.  There ARE numbers and other symbols 1&amp;2&amp;3...........</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">e 7</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;string&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int hashtable[27]=&#123;0&#125;;</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">    string str;</span><br><span class="line">    getline(cin,str);</span><br><span class="line">    int len = str.length();</span><br><span class="line">    int temp;</span><br><span class="line">    for(int i=0;i&lt;len;i++)&#123;</span><br><span class="line">        if(str[i]&gt;=&#x27;A&#x27;&amp;&amp;str[i]&lt;=&#x27;Z&#x27;) &#123;</span><br><span class="line">            temp = str[i]-&#x27;A&#x27;;</span><br><span class="line">            hashtable[temp]++;</span><br><span class="line">        &#125;else if(str[i]&gt;=&#x27;a&#x27;&amp;&amp;str[i]&lt;=&#x27;z&#x27;)&#123;</span><br><span class="line">             temp = str[i]-&#x27;a&#x27;;</span><br><span class="line">            hashtable[temp]++;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    int k=0;</span><br><span class="line">    for(int i=0;i&lt;27;i++)&#123;</span><br><span class="line">        if(hashtable[k]&lt;hashtable[i])</span><br><span class="line">            k=i;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;%c %d&quot;,&#x27;a&#x27;+k,hashtable[k]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1042-字符统计-20-分&quot;&gt;&lt;a href=&quot;#1042-字符统计-20-分&quot; class=&quot;headerlink&quot; title=&quot;1042 字符统计 (20 分)&quot;&gt;&lt;/a&gt;1042 字符统计 (20 分)&lt;/h1&gt;&lt;p&gt;请编写程序，找出一段给定文字中出现最</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://macrohao.hithub.io/2021/09/28/1041%20%E8%80%83%E8%AF%95%E5%BA%A7%E4%BD%8D%E5%8F%B7%20(15%20%E5%88%86)/"/>
    <id>http://macrohao.hithub.io/2021/09/28/1041%20%E8%80%83%E8%AF%95%E5%BA%A7%E4%BD%8D%E5%8F%B7%20(15%20%E5%88%86)/</id>
    <published>2021-09-27T23:40:21.036Z</published>
    <updated>2021-09-07T15:18:11.923Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1041-考试座位号-15-分"><a href="#1041-考试座位号-15-分" class="headerlink" title="1041 考试座位号 (15 分)"></a>1041 考试座位号 (15 分)</h1><p>每个 PAT 考生在参加考试时都会被分配两个座位号，一个是试机座位，一个是考试座位。正常情况下，考生在入场时先得到试机座位号码，入座进入试机状态后，系统会显示该考生的考试座位号码，考试时考生需要换到考试座位就座。但有些考生迟到了，试机已经结束，他们只能拿着领到的试机座位号码求助于你，从后台查出他们的考试座位号码。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出一个正整数 <em>N</em>（≤1000），随后 <em>N</em> 行，每行给出一个考生的信息：<code>准考证号 试机座位号 考试座位号</code>。其中<code>准考证号</code>由 16 位数字组成，座位从 1 到 <em>N</em> 编号。输入保证每个人的准考证号都不同，并且任何时候都不会把两个人分配到同一个座位上。</p><p>考生信息之后，给出一个正整数 <em>M</em>（≤<em>N</em>），随后一行中给出 <em>M</em> 个待查询的试机座位号码，以空格分隔。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>对应每个需要查询的试机座位号码，在一行中输出对应考生的准考证号和考试座位号码，中间用 1 个空格分隔。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">3310120150912233 2 4</span><br><span class="line">3310120150912119 4 1</span><br><span class="line">3310120150912126 1 3</span><br><span class="line">3310120150912002 3 2</span><br><span class="line">2</span><br><span class="line">3 4结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3310120150912002 2</span><br><span class="line">3310120150912119 1结尾无空行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const int maxn =1010;</span><br><span class="line">struct student&#123;</span><br><span class="line">    long long number;</span><br><span class="line">    int number1;</span><br><span class="line">    int number2;</span><br><span class="line">&#125; stu[maxn];</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">    int m;</span><br><span class="line">    cin&gt;&gt;m;</span><br><span class="line">    for(int i=0;i&lt;m;i++)&#123;</span><br><span class="line">        scanf(&quot;%lld&quot;,&amp;stu[i].number);</span><br><span class="line">        scanf(&quot;%d %d&quot;,&amp;stu[i].number1,&amp;stu[i].number2);</span><br><span class="line">    &#125;</span><br><span class="line">    int n,temp;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    while(scanf(&quot;%d&quot;,&amp;temp)!=EOF)&#123;</span><br><span class="line">    for(int i=0;i&lt;m;i++)&#123;</span><br><span class="line">    if(temp==stu[i].number1)&#123;</span><br><span class="line">    printf(&quot;%lld %d\n&quot;,stu[i].number,stu[i].number2);</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1041-考试座位号-15-分&quot;&gt;&lt;a href=&quot;#1041-考试座位号-15-分&quot; class=&quot;headerlink&quot; title=&quot;1041 考试座位号 (15 分)&quot;&gt;&lt;/a&gt;1041 考试座位号 (15 分)&lt;/h1&gt;&lt;p&gt;每个 PAT 考生在参加考试</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://macrohao.hithub.io/2021/09/28/1038%20%E7%BB%9F%E8%AE%A1%E5%90%8C%E6%88%90%E7%BB%A9%E5%AD%A6%E7%94%9F%20(20%20%E5%88%86)/"/>
    <id>http://macrohao.hithub.io/2021/09/28/1038%20%E7%BB%9F%E8%AE%A1%E5%90%8C%E6%88%90%E7%BB%A9%E5%AD%A6%E7%94%9F%20(20%20%E5%88%86)/</id>
    <published>2021-09-27T23:40:21.033Z</published>
    <updated>2021-09-07T15:17:35.979Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1038-统计同成绩学生-20-分"><a href="#1038-统计同成绩学生-20-分" class="headerlink" title="1038 统计同成绩学生 (20 分)"></a>1038 统计同成绩学生 (20 分)</h1><p>本题要求读入 <em>N</em> 名学生的成绩，将获得某一给定分数的学生人数输出。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第 1 行给出不超过 105 的正整数 <em>N</em>，即学生总人数。随后一行给出 <em>N</em> 名学生的百分制整数成绩，中间以空格分隔。最后一行给出要查询的分数个数 <em>K</em>（不超过 <em>N</em> 的正整数），随后是 <em>K</em> 个分数，中间以空格分隔。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中按查询顺序给出得分等于指定分数的学生人数，中间以空格分隔，但行末不得有多余空格。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">60 75 90 55 75 99 82 90 75 50</span><br><span class="line">3 75 90 88结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 2 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int hashtable[105]=&#123;0&#125;;</span><br><span class="line">int main()&#123;</span><br><span class="line">    int n;</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">    for(int i=0;i&lt;n;i++)&#123;</span><br><span class="line">        int temp;</span><br><span class="line">        scanf(&quot;%d&quot;,&amp;temp);</span><br><span class="line">        hashtable[temp]++;</span><br><span class="line">    &#125;</span><br><span class="line">    int k;</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;k);</span><br><span class="line">    for(int i=0;i&lt;k;i++)&#123;</span><br><span class="line">        int search;</span><br><span class="line">        scanf(&quot;%d&quot;,&amp;search);</span><br><span class="line">        printf(&quot;%d&quot;,hashtable[search]);</span><br><span class="line">        if(i&lt;k-1)&#123;</span><br><span class="line">            printf(&quot; &quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1038-统计同成绩学生-20-分&quot;&gt;&lt;a href=&quot;#1038-统计同成绩学生-20-分&quot; class=&quot;headerlink&quot; title=&quot;1038 统计同成绩学生 (20 分)&quot;&gt;&lt;/a&gt;1038 统计同成绩学生 (20 分)&lt;/h1&gt;&lt;p&gt;本题要求读入</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://macrohao.hithub.io/2021/09/28/1037%20%E5%9C%A8%E9%9C%8D%E6%A0%BC%E6%B2%83%E8%8C%A8%E6%89%BE%E9%9B%B6%E9%92%B1%20(20%20%E5%88%86)/"/>
    <id>http://macrohao.hithub.io/2021/09/28/1037%20%E5%9C%A8%E9%9C%8D%E6%A0%BC%E6%B2%83%E8%8C%A8%E6%89%BE%E9%9B%B6%E9%92%B1%20(20%20%E5%88%86)/</id>
    <published>2021-09-27T23:40:21.032Z</published>
    <updated>2021-09-07T15:17:03.607Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1037-在霍格沃茨找零钱-20-分"><a href="#1037-在霍格沃茨找零钱-20-分" class="headerlink" title="1037 在霍格沃茨找零钱 (20 分)"></a>1037 在霍格沃茨找零钱 (20 分)</h1><p>如果你是哈利·波特迷，你会知道魔法世界有它自己的货币系统 —— 就如海格告诉哈利的：“十七个银西可(Sickle)兑一个加隆(Galleon)，二十九个纳特(Knut)兑一个西可，很容易。”现在，给定哈利应付的价钱 <em>P</em> 和他实付的钱 <em>A</em>，你的任务是写一个程序来计算他应该被找的零钱。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在 1 行中分别给出 <em>P</em> 和 <em>A</em>，格式为 <code>Galleon.Sickle.Knut</code>，其间用 1 个空格分隔。这里 <code>Galleon</code> 是 [0, 107] 区间内的整数，<code>Sickle</code> 是 [0, 17) 区间内的整数，<code>Knut</code> 是 [0, 29) 区间内的整数。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中用与输入同样的格式输出哈利应该被找的零钱。如果他没带够钱，那么输出的应该是负数。</p><h3 id="输入样例-1："><a href="#输入样例-1：" class="headerlink" title="输入样例 1："></a>输入样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10.16.27 14.1.28</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-1："><a href="#输出样例-1：" class="headerlink" title="输出样例 1："></a>输出样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3.2.1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输入样例-2："><a href="#输入样例-2：" class="headerlink" title="输入样例 2："></a>输入样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">14.1.28 10.16.27</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-2："><a href="#输出样例-2：" class="headerlink" title="输出样例 2："></a>输出样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-3.2.1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()&#123;</span><br><span class="line">    int G,S,K,sum1=0,sum2=0,change;</span><br><span class="line">    scanf(&quot;%d.%d.%d&quot;,&amp;G,&amp;S,&amp;K);</span><br><span class="line">    sum1 = G*17*29 +S*29 + K;</span><br><span class="line">    int g,s,k;</span><br><span class="line">    scanf(&quot;%d.%d.%d&quot;,&amp;g,&amp;s,&amp;k);</span><br><span class="line">    sum2 = g*17*29 +s*29 + k;</span><br><span class="line">    </span><br><span class="line">    change = sum2 - sum1;</span><br><span class="line">    if(change&lt;0)&#123;</span><br><span class="line">        printf(&quot;-&quot;);</span><br><span class="line">        change= -change;</span><br><span class="line">    &#125;</span><br><span class="line">        printf(&quot;%d.%d.%d&quot;,change/29/17,change/29%17,change%29);</span><br><span class="line">  </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1037-在霍格沃茨找零钱-20-分&quot;&gt;&lt;a href=&quot;#1037-在霍格沃茨找零钱-20-分&quot; class=&quot;headerlink&quot; title=&quot;1037 在霍格沃茨找零钱 (20 分)&quot;&gt;&lt;/a&gt;1037 在霍格沃茨找零钱 (20 分)&lt;/h1&gt;&lt;p&gt;如果</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://macrohao.hithub.io/2021/09/28/1036%20%E8%B7%9F%E5%A5%A5%E5%B7%B4%E9%A9%AC%E4%B8%80%E8%B5%B7%E7%BC%96%E7%A8%8B%20(15%20%E5%88%86)/"/>
    <id>http://macrohao.hithub.io/2021/09/28/1036%20%E8%B7%9F%E5%A5%A5%E5%B7%B4%E9%A9%AC%E4%B8%80%E8%B5%B7%E7%BC%96%E7%A8%8B%20(15%20%E5%88%86)/</id>
    <published>2021-09-27T23:40:21.029Z</published>
    <updated>2021-09-07T15:16:32.506Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1036-跟奥巴马一起编程-15-分"><a href="#1036-跟奥巴马一起编程-15-分" class="headerlink" title="1036 跟奥巴马一起编程 (15 分)"></a>1036 跟奥巴马一起编程 (15 分)</h1><p>美国总统奥巴马不仅呼吁所有人都学习编程，甚至以身作则编写代码，成为美国历史上首位编写计算机代码的总统。2014 年底，为庆祝“计算机科学教育周”正式启动，奥巴马编写了很简单的计算机代码：在屏幕上画一个正方形。现在你也跟他一起画吧！</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出正方形边长 <em>N</em>（3≤<em>N</em>≤20）和组成正方形边的某种字符 C，间隔一个空格。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出由给定字符 C 画出的正方形。但是注意到行间距比列间距大，所以为了让结果看上去更像正方形，我们输出的行数实际上是列数的 50%（四舍五入取整）。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10 a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()&#123;</span><br><span class="line">    int n;</span><br><span class="line">    char c;</span><br><span class="line">    scanf(&quot;%d %c&quot;,&amp;n ,&amp;c);</span><br><span class="line">    int row = n / 2 +n %2;</span><br><span class="line">    </span><br><span class="line">    for(int i=1;i&lt;=n ;i++)&#123;</span><br><span class="line">        printf(&quot;%c&quot;,c);</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;\n&quot;);</span><br><span class="line">    </span><br><span class="line">   for(int i=2;i&lt;row;i++)&#123;</span><br><span class="line">       printf(&quot;%c&quot;,c);</span><br><span class="line">       for(int j=2;j&lt;n;j++)&#123;</span><br><span class="line">           printf(&quot; &quot;);</span><br><span class="line">       &#125;</span><br><span class="line">       printf(&quot;%c\n&quot;,c);</span><br><span class="line">   &#125;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        printf(&quot;%c&quot;,c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1036-跟奥巴马一起编程-15-分&quot;&gt;&lt;a href=&quot;#1036-跟奥巴马一起编程-15-分&quot; class=&quot;headerlink&quot; title=&quot;1036 跟奥巴马一起编程 (15 分)&quot;&gt;&lt;/a&gt;1036 跟奥巴马一起编程 (15 分)&lt;/h1&gt;&lt;p&gt;美国</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://macrohao.hithub.io/2021/09/28/1032%20%E6%8C%96%E6%8E%98%E6%9C%BA%E6%8A%80%E6%9C%AF%E5%93%AA%E5%AE%B6%E5%BC%BA%20(20%20%E5%88%86)/"/>
    <id>http://macrohao.hithub.io/2021/09/28/1032%20%E6%8C%96%E6%8E%98%E6%9C%BA%E6%8A%80%E6%9C%AF%E5%93%AA%E5%AE%B6%E5%BC%BA%20(20%20%E5%88%86)/</id>
    <published>2021-09-27T23:40:21.027Z</published>
    <updated>2021-09-07T15:16:00.215Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1032-挖掘机技术哪家强-20-分"><a href="#1032-挖掘机技术哪家强-20-分" class="headerlink" title="1032 挖掘机技术哪家强 (20 分)"></a>1032 挖掘机技术哪家强 (20 分)</h1><p>为了用事实说明挖掘机技术到底哪家强，PAT 组织了一场挖掘机技能大赛。现请你根据比赛结果统计出技术最强的那个学校。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第 1 行给出不超过 105 的正整数 <em>N</em>，即参赛人数。随后 <em>N</em> 行，每行给出一位参赛者的信息和成绩，包括其所代表的学校的编号（从 1 开始连续编号）、及其比赛成绩（百分制），中间以空格分隔。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中给出总得分最高的学校的编号、及其总分，中间以空格分隔。题目保证答案唯一，没有并列。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">3 65</span><br><span class="line">2 80</span><br><span class="line">1 100</span><br><span class="line">2 70</span><br><span class="line">3 40</span><br><span class="line">3 0</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 150</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">#define N 100000</span><br><span class="line">int main()&#123;</span><br><span class="line">    int a[N],x,number,score,maxnumber,maxscore;</span><br><span class="line">    cin&gt;&gt;x;</span><br><span class="line">    for(int i=0;i&lt;x;i++)&#123;</span><br><span class="line">        scanf(&quot;%d %d&quot;,&amp;number,&amp;score);</span><br><span class="line">        a[number] += score;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    maxnumber=1;</span><br><span class="line">    maxscore=a[1];</span><br><span class="line"></span><br><span class="line">    for(int i=2;i&lt;=x;i++)&#123;</span><br><span class="line">       if(a[i]&gt;maxscore)&#123;</span><br><span class="line">            maxscore=a[i];</span><br><span class="line">            maxnumber=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">      printf(&quot;%d %d&quot;,maxnumber,maxscore);   </span><br><span class="line">   </span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1032-挖掘机技术哪家强-20-分&quot;&gt;&lt;a href=&quot;#1032-挖掘机技术哪家强-20-分&quot; class=&quot;headerlink&quot; title=&quot;1032 挖掘机技术哪家强 (20 分)&quot;&gt;&lt;/a&gt;1032 挖掘机技术哪家强 (20 分)&lt;/h1&gt;&lt;p&gt;为了</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://macrohao.hithub.io/2021/09/28/1031%20%E6%9F%A5%E9%AA%8C%E8%BA%AB%E4%BB%BD%E8%AF%81%20(15%20%E5%88%86)/"/>
    <id>http://macrohao.hithub.io/2021/09/28/1031%20%E6%9F%A5%E9%AA%8C%E8%BA%AB%E4%BB%BD%E8%AF%81%20(15%20%E5%88%86)/</id>
    <published>2021-09-27T23:40:21.025Z</published>
    <updated>2021-09-07T15:15:33.310Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1031-查验身份证-15-分"><a href="#1031-查验身份证-15-分" class="headerlink" title="1031 查验身份证 (15 分)"></a>1031 查验身份证 (15 分)</h1><p>一个合法的身份证号码由17位地区、日期编号和顺序编号加1位校验码组成。校验码的计算规则如下：</p><p>首先对前17位数字加权求和，权重分配为：{7，9，10，5，8，4，2，1，6，3，7，9，10，5，8，4，2}；然后将计算的和对11取模得到值<code>Z</code>；最后按照以下关系对应<code>Z</code>值与校验码<code>M</code>的值：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Z：0 1 2 3 4 5 6 7 8 9 10</span><br><span class="line">M：1 0 X 9 8 7 6 5 4 3 2</span><br></pre></td></tr></table></figure><p>现在给定一些身份证号码，请你验证校验码的有效性，并输出有问题的号码。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出正整数<em>N</em>（≤100）是输入的身份证号码的个数。随后<em>N</em>行，每行给出1个18位身份证号码。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>按照输入的顺序每行输出1个有问题的身份证号码。这里并不检验前17位是否合理，只检查前17位是否全为数字且最后1位校验码计算准确。如果所有号码都正常，则输出<code>All passed</code>。</p><h3 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">320124198808240056</span><br><span class="line">12010X198901011234</span><br><span class="line">110108196711301866</span><br><span class="line">37070419881216001X结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12010X198901011234</span><br><span class="line">110108196711301866</span><br><span class="line">37070419881216001X结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">320124198808240056</span><br><span class="line">110108196711301862结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">All passed</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">int quan[17]=&#123;7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2&#125;;</span><br><span class="line">char M[]=&#123;&#x27;1&#x27;,&#x27;0&#x27;,&#x27;X&#x27;,&#x27;9&#x27;,&#x27;8&#x27;,&#x27;7&#x27;,&#x27;6&#x27;,&#x27;5&#x27;,&#x27;4&#x27;,&#x27;3&#x27;,&#x27;2&#x27;&#125;;</span><br><span class="line"></span><br><span class="line">bool yanzheng(int a[],char str[])&#123;</span><br><span class="line">    int sum = 0;</span><br><span class="line">    for(int i=0;i&lt;17;i++)&#123;</span><br><span class="line">        sum += (str[i]-&#x27;0&#x27;)*a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    int z=sum%11;</span><br><span class="line">    if(M[z]==str[17])</span><br><span class="line">        return 1;</span><br><span class="line">    else</span><br><span class="line">        return 0;</span><br><span class="line">&#125;</span><br><span class="line">bool hefa(char a[])&#123;</span><br><span class="line">    int len=strlen(a);</span><br><span class="line">    for(int i=0;i&lt;len;i++)&#123;</span><br><span class="line">        if(!(a[i]&gt;=&#x27;0&#x27;&amp;&amp;a[i]&lt;=&#x27;9&#x27;))</span><br><span class="line">            return 0;</span><br><span class="line">    &#125;</span><br><span class="line">    return 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">    </span><br><span class="line">    int sign=1;</span><br><span class="line">    int n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    for(int i=0;i&lt;n;i++)&#123;</span><br><span class="line">    char id[18];</span><br><span class="line">        scanf(&quot;%s&quot;,id);</span><br><span class="line">        if(hefa(id)==0)&#123;</span><br><span class="line">            sign =0;</span><br><span class="line">            printf(&quot;%s&quot;,id);</span><br><span class="line">            printf(&quot;\n&quot;);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">        if(yanzheng(quan,id)==0)&#123;</span><br><span class="line">        sign =0;</span><br><span class="line">            printf(&quot;%s&quot;,id);</span><br><span class="line">            printf(&quot;\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if(sign==1)</span><br><span class="line">        printf(&quot;All passed&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1031-查验身份证-15-分&quot;&gt;&lt;a href=&quot;#1031-查验身份证-15-分&quot; class=&quot;headerlink&quot; title=&quot;1031 查验身份证 (15 分)&quot;&gt;&lt;/a&gt;1031 查验身份证 (15 分)&lt;/h1&gt;&lt;p&gt;一个合法的身份证号码由17位</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://macrohao.hithub.io/2021/09/28/1030%20%E5%AE%8C%E7%BE%8E%E6%95%B0%E5%88%97%20(25%20%E5%88%86)/"/>
    <id>http://macrohao.hithub.io/2021/09/28/1030%20%E5%AE%8C%E7%BE%8E%E6%95%B0%E5%88%97%20(25%20%E5%88%86)/</id>
    <published>2021-09-27T23:40:21.022Z</published>
    <updated>2021-09-07T15:14:57.899Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1030-完美数列-25-分"><a href="#1030-完美数列-25-分" class="headerlink" title="1030 完美数列 (25 分)"></a>1030 完美数列 (25 分)</h1><p>给定一个正整数数列，和正整数 <em>p</em>，设这个数列中的最大值是 <em>M</em>，最小值是 <em>m</em>，如果 <em>M</em>≤<em>m**p</em>，则称这个数列是完美数列。</p><p>现在给定参数 <em>p</em> 和一些正整数，请你从中选择尽可能多的数构成一个完美数列。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出两个正整数 <em>N</em> 和 <em>p</em>，其中 <em>N</em>（≤105）是输入的正整数的个数，<em>p</em>（≤109）是给定的参数。第二行给出 <em>N</em> 个正整数，每个数不超过 109。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出最多可以选择多少个数可以用它们组成一个完美数列。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10 8</span><br><span class="line">2 3 20 4 5 1 6 7 8 9结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">int a[100010];</span><br><span class="line">using namespace std;</span><br><span class="line">int n;</span><br><span class="line">long long p;</span><br><span class="line"></span><br><span class="line">int divid(int i,long long x)&#123;</span><br><span class="line">        int mid,right,left;</span><br><span class="line">        left =i+1;</span><br><span class="line">    right = n-1;</span><br><span class="line">        if(a[n-1]&lt;=x) return n;</span><br><span class="line">        while(left&lt;right)&#123;</span><br><span class="line">            mid = (right + left)/2;</span><br><span class="line">            </span><br><span class="line">           if(a[mid]&lt;=x) left = mid +1;</span><br><span class="line">           else  right = mid;</span><br><span class="line">        &#125;</span><br><span class="line">    return left;    </span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">    </span><br><span class="line">    scanf(&quot;%d %lld&quot;,&amp;n,&amp;p);</span><br><span class="line">    for(int i=0 ;i&lt;n ;i++)&#123;</span><br><span class="line">        scanf(&quot;%d&quot;,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    int ans=0;</span><br><span class="line">    sort(a,a+n);</span><br><span class="line">    for(int i=0;i&lt;n;i++)&#123;</span><br><span class="line">        long long x = (long long)(a[i]*p);</span><br><span class="line">        int j = divid(i,x);</span><br><span class="line">        ans = max(ans,j-i);</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;%d&quot;,ans);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1030-完美数列-25-分&quot;&gt;&lt;a href=&quot;#1030-完美数列-25-分&quot; class=&quot;headerlink&quot; title=&quot;1030 完美数列 (25 分)&quot;&gt;&lt;/a&gt;1030 完美数列 (25 分)&lt;/h1&gt;&lt;p&gt;给定一个正整数数列，和正整数 &lt;em</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://macrohao.hithub.io/2021/09/28/1028%20%E4%BA%BA%E5%8F%A3%E6%99%AE%E6%9F%A5%20(20%20%E5%88%86)/"/>
    <id>http://macrohao.hithub.io/2021/09/28/1028%20%E4%BA%BA%E5%8F%A3%E6%99%AE%E6%9F%A5%20(20%20%E5%88%86)/</id>
    <published>2021-09-27T23:40:21.020Z</published>
    <updated>2021-09-07T15:14:24.445Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1028-人口普查-20-分"><a href="#1028-人口普查-20-分" class="headerlink" title="1028 人口普查 (20 分)"></a>1028 人口普查 (20 分)</h1><p>某城镇进行人口普查，得到了全体居民的生日。现请你写个程序，找出镇上最年长和最年轻的人。</p><p>这里确保每个输入的日期都是合法的，但不一定是合理的——假设已知镇上没有超过 200 岁的老人，而今天是 2014 年 9 月 6 日，所以超过 200 岁的生日和未出生的生日都是不合理的，应该被过滤掉。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第一行给出正整数 <em>N</em>，取值在(0,105]；随后 <em>N</em> 行，每行给出 1 个人的姓名（由不超过 5 个英文字母组成的字符串）、以及按 <code>yyyy/mm/dd</code>（即年/月/日）格式给出的生日。题目保证最年长和最年轻的人没有并列。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中顺序输出有效生日的个数、最年长人和最年轻人的姓名，其间以空格分隔。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">John 2001/05/12</span><br><span class="line">Tom 1814/09/06</span><br><span class="line">Ann 2121/01/30</span><br><span class="line">James 1814/09/05</span><br><span class="line">Steve 1967/11/20结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 Tom John</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int maxn = 10010;</span><br><span class="line"></span><br><span class="line">struct people&#123;</span><br><span class="line">char name[5];</span><br><span class="line">int year;</span><br><span class="line">int month;</span><br><span class="line">int day;</span><br><span class="line">&#125; temp,zuo,you,young,old;</span><br><span class="line"></span><br><span class="line">bool lesss(people a,people b)&#123;</span><br><span class="line">if(a.year!=b.year)</span><br><span class="line">return a.year&lt;b.year;</span><br><span class="line">else if(a.month!=b.month)</span><br><span class="line">return a.month&lt;b.month;</span><br><span class="line">else</span><br><span class="line">return a.day&lt;=b.day;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bool much(people a,people b)&#123;</span><br><span class="line">if(a.year!=b.year)</span><br><span class="line">return a.year&gt;b.year;</span><br><span class="line">else if(a.month!=b.month)</span><br><span class="line">return a.month&gt;b.month;</span><br><span class="line">else</span><br><span class="line">return a.day&gt;=b.day;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">int n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"></span><br><span class="line">young.year=zuo.year=1814;</span><br><span class="line">young.month=zuo.month=9;</span><br><span class="line">young.day=zuo.day=6;</span><br><span class="line">old.year=you.year=2014;</span><br><span class="line">old.month=you.month=9;</span><br><span class="line">old.day=you.day=6;</span><br><span class="line"></span><br><span class="line">int cnt=0;</span><br><span class="line">for(int i=0;i&lt;n;i++)&#123;</span><br><span class="line">scanf(&quot;%s %d/%d/%d&quot;,&amp;temp.name,&amp;temp.year,&amp;temp.month,&amp;temp.day);</span><br><span class="line">if(lesss(temp,you)&amp;&amp;much(temp,zuo))&#123;</span><br><span class="line">cnt++;</span><br><span class="line">if(lesss(temp,old))</span><br><span class="line">old = temp;</span><br><span class="line">if(much(temp,young))</span><br><span class="line">young = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if(cnt==0)</span><br><span class="line">printf(&quot;0\n&quot;);</span><br><span class="line">else</span><br><span class="line">printf(&quot;%d %s %s\n&quot;,cnt,old.name,young.name);</span><br><span class="line"></span><br><span class="line">return 0;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1028-人口普查-20-分&quot;&gt;&lt;a href=&quot;#1028-人口普查-20-分&quot; class=&quot;headerlink&quot; title=&quot;1028 人口普查 (20 分)&quot;&gt;&lt;/a&gt;1028 人口普查 (20 分)&lt;/h1&gt;&lt;p&gt;某城镇进行人口普查，得到了全体居民的</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://macrohao.hithub.io/2021/09/28/1027%20%E6%89%93%E5%8D%B0%E6%B2%99%E6%BC%8F%20(20%20%E5%88%86)/"/>
    <id>http://macrohao.hithub.io/2021/09/28/1027%20%E6%89%93%E5%8D%B0%E6%B2%99%E6%BC%8F%20(20%20%E5%88%86)/</id>
    <published>2021-09-27T23:40:21.017Z</published>
    <updated>2021-09-07T15:13:53.057Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1027-打印沙漏-20-分"><a href="#1027-打印沙漏-20-分" class="headerlink" title="1027 打印沙漏 (20 分)"></a>1027 打印沙漏 (20 分)</h1><p>本题要求你写个程序把给定的符号打印成沙漏的形状。例如给定17个“*”，要求按下列格式打印</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*****</span><br><span class="line"> ***</span><br><span class="line">  *</span><br><span class="line"> ***</span><br><span class="line">*****</span><br></pre></td></tr></table></figure><p>所谓“沙漏形状”，是指每行输出奇数个符号；各行符号中心对齐；相邻两行符号数差2；符号数先从大到小顺序递减到1，再从小到大顺序递增；首尾符号数相等。</p><p>给定任意N个符号，不一定能正好组成一个沙漏。要求打印出的沙漏能用掉尽可能多的符号。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行给出1个正整数N（≤1000）和一个符号，中间以空格分隔。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>首先打印出由给定符号组成的最大的沙漏形状，最后在一行中输出剩下没用掉的符号数。</p><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">19 *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*****</span><br><span class="line"> ***</span><br><span class="line">  *</span><br><span class="line"> ***</span><br><span class="line">*****</span><br><span class="line">2结尾无空行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()&#123;</span><br><span class="line">    int x;</span><br><span class="line">    char c;</span><br><span class="line">    scanf(&quot;%d %c&quot;,&amp;x,&amp;c);</span><br><span class="line">    int n=(int)sqrt((x+1)/2);</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        for(int j=0;j&lt;i-1;j++)&#123;</span><br><span class="line">            printf(&quot; &quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        for(int k=(n+1-i)*2-1;k&gt;0;k--)&#123;</span><br><span class="line">            printf(&quot;%c&quot;,c);</span><br><span class="line">        &#125;</span><br><span class="line">        printf(&quot;\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i=2;i&lt;=n;i++)&#123;</span><br><span class="line">        for(int j=n-i;j!=0;j--)&#123;</span><br><span class="line">            printf(&quot; &quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        for(int k=0;k&lt;2*i-1;k++)&#123;</span><br><span class="line">            printf(&quot;%c&quot;,c);</span><br><span class="line">        &#125;</span><br><span class="line">        printf(&quot;\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    printf(&quot;%d&quot;,x-(n*n*2-1));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1027-打印沙漏-20-分&quot;&gt;&lt;a href=&quot;#1027-打印沙漏-20-分&quot; class=&quot;headerlink&quot; title=&quot;1027 打印沙漏 (20 分)&quot;&gt;&lt;/a&gt;1027 打印沙漏 (20 分)&lt;/h1&gt;&lt;p&gt;本题要求你写个程序把给定的符号打印成</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://macrohao.hithub.io/2021/09/28/1026%20%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4%20(15%20%E5%88%86)/"/>
    <id>http://macrohao.hithub.io/2021/09/28/1026%20%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4%20(15%20%E5%88%86)/</id>
    <published>2021-09-27T23:40:21.015Z</published>
    <updated>2021-09-07T15:13:22.898Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1026-程序运行时间-15-分"><a href="#1026-程序运行时间-15-分" class="headerlink" title="1026 程序运行时间 (15 分)"></a>1026 程序运行时间 (15 分)</h1><p>要获得一个 C 语言程序的运行时间，常用的方法是调用头文件 time.h，其中提供了 clock() 函数，可以捕捉从程序开始运行到 clock() 被调用时所耗费的时间。这个时间单位是 clock tick，即“时钟打点”。同时还有一个常数 CLK_TCK，给出了机器时钟每秒所走的时钟打点数。于是为了获得一个函数 <em>f</em> 的运行时间，我们只要在调用 <em>f</em> 之前先调用 clock()，获得一个时钟打点数 C1；在 <em>f</em> 执行完成后再调用 clock()，获得另一个时钟打点数 C2；两次获得的时钟打点数之差 (C2-C1) 就是 <em>f</em> 运行所消耗的时钟打点数，再除以常数 CLK_TCK，就得到了以秒为单位的运行时间。</p><p>这里不妨简单假设常数 CLK_TCK 为 100。现给定被测函数前后两次获得的时钟打点数，请你给出被测函数运行的时间。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中顺序给出 2 个整数 C1 和 C2。注意两次获得的时钟打点数肯定不相同，即 C1 &lt; C2，并且取值在 [0,107]。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出被测函数运行的时间。运行时间必须按照 <code>hh:mm:ss</code>（即2位的 <code>时:分:秒</code>）格式输出；不足 1 秒的时间四舍五入到秒。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">123 4577973</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12:42:59</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()&#123;</span><br><span class="line">    int c1,c2,ans;</span><br><span class="line">    scanf(&quot;%d%d&quot;,&amp;c1,&amp;c2);</span><br><span class="line">    ans=c2-c1;</span><br><span class="line">    ans=(int)((ans*1.0+50)/100);</span><br><span class="line">    printf(&quot;%02d:%02d:%02d&quot;,ans/3600,ans%3600/60,ans%60);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1026-程序运行时间-15-分&quot;&gt;&lt;a href=&quot;#1026-程序运行时间-15-分&quot; class=&quot;headerlink&quot; title=&quot;1026 程序运行时间 (15 分)&quot;&gt;&lt;/a&gt;1026 程序运行时间 (15 分)&lt;/h1&gt;&lt;p&gt;要获得一个 C 语言</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://macrohao.hithub.io/2021/09/28/1023%20%E7%BB%84%E4%B8%AA%E6%9C%80%E5%B0%8F%E6%95%B0%20(20%20%E5%88%86)/"/>
    <id>http://macrohao.hithub.io/2021/09/28/1023%20%E7%BB%84%E4%B8%AA%E6%9C%80%E5%B0%8F%E6%95%B0%20(20%20%E5%88%86)/</id>
    <published>2021-09-27T23:40:21.013Z</published>
    <updated>2021-09-07T15:12:49.332Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1023-组个最小数-20-分"><a href="#1023-组个最小数-20-分" class="headerlink" title="1023 组个最小数 (20 分)"></a>1023 组个最小数 (20 分)</h1><p>给定数字 0-9 各若干个。你可以以任意顺序排列这些数字，但必须全部使用。目标是使得最后得到的数尽可能小（注意 0 不能做首位）。例如：给定两个 0，两个 1，三个 5，一个 8，我们得到的最小的数就是 10015558。</p><p>现给定数字，请编写程序输出能够组成的最小的数。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出 10 个非负整数，顺序表示我们拥有数字 0、数字 1、……数字 9 的个数。整数间用一个空格分隔。10 个数字的总个数不超过 50，且至少拥有 1 个非 0 的数字。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出能够组成的最小的数。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 2 0 0 0 3 0 0 1 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10015558</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()&#123;</span><br><span class="line">    int a[10]=&#123;0&#125;;</span><br><span class="line">    for(int i=0;i&lt;10;i++)&#123;</span><br><span class="line">        scanf(&quot;%d&quot;,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i=1;i&lt;10;i++)&#123;</span><br><span class="line">        if(a[i]!=0)&#123;</span><br><span class="line">            printf(&quot;%d&quot;,i);</span><br><span class="line">            a[i]--;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i=0;i&lt;10;i++)&#123;</span><br><span class="line">        while(a[i])&#123;</span><br><span class="line">            printf(&quot;%d&quot;,i);</span><br><span class="line">            a[i]--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1023-组个最小数-20-分&quot;&gt;&lt;a href=&quot;#1023-组个最小数-20-分&quot; class=&quot;headerlink&quot; title=&quot;1023 组个最小数 (20 分)&quot;&gt;&lt;/a&gt;1023 组个最小数 (20 分)&lt;/h1&gt;&lt;p&gt;给定数字 0-9 各若干个。</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://macrohao.hithub.io/2021/09/28/1022%20D%E8%BF%9B%E5%88%B6%E7%9A%84A+B%20(20%20%E5%88%86)/"/>
    <id>http://macrohao.hithub.io/2021/09/28/1022%20D%E8%BF%9B%E5%88%B6%E7%9A%84A+B%20(20%20%E5%88%86)/</id>
    <published>2021-09-27T23:40:21.010Z</published>
    <updated>2021-09-07T15:11:21.427Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1022-D进制的A-B-20-分"><a href="#1022-D进制的A-B-20-分" class="headerlink" title="1022 D进制的A+B (20 分)"></a>1022 D进制的A+B (20 分)</h1><p>输入两个非负 10 进制整数 <em>A</em> 和 <em>B</em> (≤230−1)，输出 <em>A</em>+<em>B</em> 的 <em>D</em> (1&lt;<em>D</em>≤10)进制数。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中依次给出 3 个整数 <em>A</em>、<em>B</em> 和 <em>D</em>。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出 <em>A</em>+<em>B</em> 的 <em>D</em> 进制数。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">123 456 8</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1103</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int a[30];</span><br><span class="line">int main()&#123;</span><br><span class="line">    int  A,B,sum;</span><br><span class="line">    int D,cnt=0;</span><br><span class="line">    scanf(&quot;%d %d %d&quot;,&amp;A,&amp;B,&amp;D);</span><br><span class="line">    sum = A+B;</span><br><span class="line">    do&#123;</span><br><span class="line">        a[cnt++]=sum%D;</span><br><span class="line">        sum = sum/D;</span><br><span class="line">    &#125;while(sum);</span><br><span class="line">    for(int i=cnt-1;i&gt;=0;i--)&#123;</span><br><span class="line">        printf(&quot;%d&quot;,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1022-D进制的A-B-20-分&quot;&gt;&lt;a href=&quot;#1022-D进制的A-B-20-分&quot; class=&quot;headerlink&quot; title=&quot;1022 D进制的A+B (20 分)&quot;&gt;&lt;/a&gt;1022 D进制的A+B (20 分)&lt;/h1&gt;&lt;p&gt;输入两个非负</summary>
      
    
    
    
    
  </entry>
  
</feed>
